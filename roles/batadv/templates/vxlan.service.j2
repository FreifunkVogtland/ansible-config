[Unit]
Description=vxlan-{{ mesh_name }} setup
Wants=network.target
BindsTo=batadv-bat-{{ mesh_name }}.service
After=batadv-bat-{{ mesh_name }}.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/bin/ip link add vxlan-{{ mesh_name }} type vxlan id "{{ mesh[mesh_name]['vxlan']['id'] }}" dev "{{gateway_if}}" dstport 4789 nolearning
ExecStart=/bin/ip link set dev vxlan-{{ mesh_name }} address {{ '02:47:89:00:%02x:%02x'|format(vpnid|int, mesh_meta[mesh_name]['id']|int) }}
ExecStart=/bin/ip link set mtu 1426 up dev vxlan-{{ mesh_name }}

{% for peer in (groups['vpns'] | difference([inventory_hostname])) %}
{% if hostvars[peer]['WANIP'] is defined %}
ExecStart=/sbin/bridge fdb append to 00:00:00:00:00:00 dst {{ hostvars[peer]['WANIP'] }} dev vxlan-{{ mesh_name }}
ExecStart=/sbin/bridge fdb append to {{ '02:47:89:00:%02x:%02x'|format(hostvars[peer]['vpnid']|int, mesh_meta[mesh_name]['id']|int) }} dst {{ hostvars[peer]['WANIP'] }} dev vxlan-{{ mesh_name }}
{% endif %}
{% endfor %}
ExecStart=/sbin/bridge fdb append to {{ '02:47:89:00:%02x:%02x'|format(vpnid|int, mesh_meta[mesh_name]['id']|int) }} dst 127.0.0.1 dev vxlan-{{ mesh_name }}

ExecStart=/bin/ip link set dev "vxlan-{{ mesh_name }}" master bat-{{ mesh_name }}
ExecStart=/bin/sh -c 'echo 1 > /sys/class/net/vxlan-{{ mesh_name }}/batman_adv/no_rebroadcast'

ExecStop=/bin/ip link del dev "vxlan-{{ mesh_name }}"

[Install]
WantedBy=multi-user.target
WantedBy=respondd.service
