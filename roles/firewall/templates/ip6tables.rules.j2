*filter
:INPUT ACCEPT
:FORWARD ACCEPT
:OUTPUT ACCEPT
:vxlan-drop -

-A INPUT -p udp -m udp --dport 4789 -j vxlan-drop
{% for peer in groups['vpns'] %}
{% if hostvars[peer]['WANIP'] is defined %}
-A vxlan-drop -d {{ hostvars[peer]['WANIP6'] }}/128 -j RETURN
{% endif %}
{% endfor %}
-A vxlan-drop -j LOG --log-prefix invalidvxlan
-A vxlan-drop -j DROP

-A INPUT -i bat0 -p udp -m udp --match multiport --dports 10000:10003 -j LOG --log-prefix fastdinfastd
-A INPUT -i bat0 -p udp -m udp --match multiport --dports 10000:10003 -j DROP

{% for peer in groups['vpns'] %}
{% if hostvars[peer]['WANIP6'] is defined %}
-A FORWARD -d {{ hostvars[peer]['WANIP6'] }}/128 -i bat0 -p udp -m udp --match multiport --dports 10000:10003 -j LOG --log-prefix fastdinfastd
-A FORWARD -d {{ hostvars[peer]['WANIP6'] }}/128 -i bat0 -p udp -m udp --match multiport --dports 10000:10003 -j DROP
{% endif %}
{% endfor %}

-A INPUT -i bat0 -p udp -m udp --match multiport --dports 11000 -j LOG --log-prefix tdiggerintdigger
-A INPUT -i bat0 -p udp -m udp --match multiport --dports 11000 -j DROP

{% for peer in groups['vpns'] %}
{% if hostvars[peer]['WANIP6'] is defined %}
-A FORWARD -d {{ hostvars[peer]['WANIP6'] }}/128 -i bat0 -p udp -m udp --match multiport --dports 11000 -j LOG --log-prefix tdiggerintdigger
-A FORWARD -d {{ hostvars[peer]['WANIP6'] }}/128 -i bat0 -p udp -m udp --match multiport --dports 11000 -j DROP
{% endif %}
{% endfor %}
COMMIT

*mangle
:PREROUTING ACCEPT 
:INPUT ACCEPT 
:FORWARD ACCEPT 
:OUTPUT ACCEPT 
:POSTROUTING ACCEPT 
-A PREROUTING -i bat+ -j MARK --set-xmark 0x1/0xffffffff
-A PREROUTING -i icvpn -j MARK --set-xmark 0x1/0xffffffff
-A POSTROUTING -o bat+ -j MARK --set-xmark 0x0/0xffffffff

{% if ffrl_bb_links %}
-A FORWARD -o bb-+ -p tcp -m tcp --tcp-flags SYN,RST SYN -m tcpmss ! --mss 0:1220 -j TCPMSS --set-mss 1220
{% endif %}

-A FORWARD -o bat0 -p tcp -m tcp --tcp-flags SYN,RST SYN -m tcpmss ! --mss 0:1220 -j TCPMSS --set-mss 1220
COMMIT
