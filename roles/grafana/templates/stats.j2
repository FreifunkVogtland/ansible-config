# SPDX-License-Identifier: CC0-1.0
# SPDX-FileCopyrightText: 2017-2020, Sven Eckelmann <sven@narfation.org>

# SPDX-License-Identifier: CC0-1.0
# SPDX-FileCopyrightText: 2017-2020, Sven Eckelmann <sven@narfation.org>

server {
	listen 80;
	listen [::]:80;

{% if https %}
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	ssl_certificate /etc/letsencrypt/live/{{ stats_domain }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ stats_domain }}/privkey.pem;
	ssl_session_timeout 1d;
	ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
	ssl_session_tickets off;

	# curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
	ssl_dhparam /etc/letsencrypt/dhparam;

	# intermediate configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ecdh_curve X25519:prime256v1:secp384r1;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
	ssl_prefer_server_ciphers off;

	# HSTS (ngx_http_headers_module is required) (63072000 seconds)
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

	# OCSP stapling
	ssl_stapling on;
	ssl_stapling_verify on;

	# verify chain of trust of OCSP response using Root CA and Intermediate certs
	ssl_trusted_certificate /etc/letsencrypt/live/{{ stats_domain }}/chain.pem;
{% endif %}

	server_name {{ stats_domain }};

	# security headers
	#add_header Content-Security-Policy "default-src 'self';";
	add_header X-Content-Type-Options "nosniff";
	add_header X-Frame-Options  "sameorigin";
	add_header X-Xss-Protection "1; mode=block";
	add_header Referrer-Policy  "strict-origin";
	add_header Feature-Policy "fullscreen 'self';";
	add_header Expect-CT "enforce, max-age=21600";

	add_header Access-Control-Allow-Origin "*";

	location ^~ /.well-known/acme-challenge/ {
		allow all;
		default_type "text/plain";
		root         /var/letsencrypt/;
	}

	location / {
		proxy_pass http://0.0.0.0:3000/;
		proxy_set_header Host $http_host;
	}
}
